{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Contacts.module.css","redux/contacts/contacts.actions.js","redux/contacts/contacts.operations.js","redux/contacts/contacts.selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts.js","App.js","redux/contacts/contacts.reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addNewContactsRequest","createAction","addNewContactsSuccess","addNewContactsError","getAllContactsRequest","getAllContactsSuccess","getAllContactsError","filterChange","removeContactsRequest","removeContactsSuccess","removeContactsError","axios","defaults","baseURL","loadingSelector","state","loading","contactsFilterSelector","filter","contactsItemsSelector","items","filteredItemsSelector","createSelector","item","name","toLowerCase","includes","trim","mapDispatchToProps","handleDelete","id","dispatch","a","delete","connect","className","styles","ul","map","number","textContent","btn","type","onClick","handleChange","block","title","input","onChange","evt","target","value","ContactForm","handleSubmit","props","some","alert","newContact","addNewContacts","setState","onSubmit","preventDefault","this","getAllContacts","form","pattern","required","speener","color","height","width","timeout","Component","contact","post","data","get","App","titleContact","Contacts","createReducer","_","action","payload","todosReducer","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d4e37e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2doLm\",\"btn\":\"ContactList_btn__3tr32\",\"textContent\":\"ContactList_textContent__XntyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__3nmpu\",\"title\":\"Filter_title__3H6jW\",\"input\":\"Filter_input__1dqjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__2FRga\",\"titleContact\":\"Contacts_titleContact__11ENq\",\"block\":\"Contacts_block__1VFuJ\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewContactsRequest = createAction(\"contacts/addNewContactsRequest\");\r\nconst addNewContactsSuccess = createAction(\"contacts/addNewContactsSuccess\");\r\nconst addNewContactsError = createAction(\"contacts/addNewContactsError\");\r\n\r\nconst getAllContactsRequest = createAction(\"contacts/getAllContactsRequest\");\r\nconst getAllContactsSuccess = createAction(\"contacts/getAllContactsSuccess\");\r\nconst getAllContactsError = createAction(\"contacts/getAllContactsError\");\r\n\r\nconst filterChange = createAction(\"contacts/filterChange\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeContactsRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeContactsSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeContactsError\");\r\n\r\nexport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contacts.actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001/\";\r\n\r\nconst addNewContacts = (contact) => async (dispatch) => {\r\n  dispatch(addNewContactsRequest());\r\n  try {\r\n    const { data } = await axios.post(\"contacts\", contact);\r\n    dispatch(addNewContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addNewContactsError(error));\r\n  }\r\n};\r\n\r\nconst getAllContacts = () => async (dispatch) => {\r\n  dispatch(getAllContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"contacts\");\r\n    dispatch(getAllContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllContactsError(error));\r\n  }\r\n};\r\n\r\nconst removeContacts = (id) => async (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  try {\r\n    await axios.delete(`contacts/${id}`);\r\n    dispatch(removeContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactsError(error));\r\n  }\r\n};\r\n\r\nexport { addNewContacts, getAllContacts, removeContacts };\r\n","\r\nimport { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const loadingSelector = (state) => state.loading;\r\nexport const contactsFilterSelector = (state) => state.filter;\r\nexport const contactsItemsSelector = (state) => state.items;\r\n  \r\nexport const filteredItemsSelector = createSelector([\r\n    contactsItemsSelector,\r\n    contactsFilterSelector,\r\n], (items, filter) => items.filter((item) =>\r\n    item.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContacts } from \"../../redux/contacts/contacts.operations\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { filteredItemsSelector } from \"../../redux/contacts/contacts.selector\";\r\n\r\nconst ContactList = ({ items, handleDelete }) => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {items.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.textContent}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={styles.btn}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: filteredItemsSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleDelete: removeContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterChange } from \"../../redux/contacts/contacts.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsFilterSelector } from \"../../redux/contacts/contacts.selector\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  const onChange = (evt) => {\r\n    handleChange(evt.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.block}>\r\n      <h2 className={styles.title}>Find contacts by name</h2>\r\n      <input\r\n        className={styles.input}\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: contactsFilterSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: filterChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport {\r\n  addNewContacts,\r\n  getAllContacts,\r\n} from \"../../redux/contacts/contacts.operations\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { contactsItemsSelector, loadingSelector } from \"../../redux/contacts/contacts.selector\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getAllContacts();\r\n  }\r\n\r\n  handleSubmit = (name, number) => {\r\n    const isDuplicate = this.props.items.some((item) => item.name === name);\r\n\r\n    if (isDuplicate) {\r\n      alert(name + \" is already in contacts \");\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.addNewContacts(newContact);\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.handleSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.onSubmit}>\r\n          <span className={styles.title}>Name</span>\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <span className={styles.title}>Number</span>\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <div className={styles.speener}>\r\n          {this.props.loading ? (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#00BFFF\"\r\n              height={50}\r\n              width={100}\r\n              timeout={3000} //3 secs\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactsItemsSelector(state),\r\n    loading: loadingSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContacts,\r\n  getAllContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.titleContact}>Contacts</h2>\r\n      <div className={styles.block}>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport Contacts from \"./components/Contacts\";\n\n\nconst App = () => {\n  return (\n    <div className=\"block\">\n      <Contacts />\n    </div>\n  );\n};\n\nexport default App;","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contacts.actions\";\r\n\r\nconst loading = createReducer(false, {\r\n  [getAllContactsRequest]: () => true,\r\n  [getAllContactsSuccess]: () => false,\r\n  [getAllContactsError]: () => false,\r\n  [addNewContactsRequest]: () => true,\r\n  [addNewContactsSuccess]: () => false,\r\n  [addNewContactsError]: () => false,\r\n  [removeContactsRequest]: () => true,\r\n  [removeContactsSuccess]: () => false,\r\n  [removeContactsError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [getAllContactsSuccess]: (_, action) => action.payload,\r\n  [addNewContactsSuccess]: (state, action) => [action.payload, ...state],\r\n  [removeContactsSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n });\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, action) => action.payload,\r\n});\r\n\r\nconst todosReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default todosReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts.reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__31cDN\",\"title\":\"ContactForm_title__3PG1y\",\"btn\":\"ContactForm_btn__2bl9t\",\"speener\":\"ContactForm_speener__3FVwZ\"};"],"sourceRoot":""}